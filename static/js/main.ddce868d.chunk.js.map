{"version":3,"sources":["component/Card.js","component/ResultsTable.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","console","log","id","state","show","label","showLabel","e","this","setState","item","agency","brandingColors","primary","width","className","style","src","logo","alt","align","key","mainImage","paddingBottom","fontSize","price","React","Component","configure","adapter","Adapter","ResultsTable","mouseEnter","existingResultData","resultsData","arr","i","length","push","prevState","mouseLeave","mouseEnterForRemove","existingSavedData","savedData","mouseLeaveForRemove","isMouseInside","isMouseInsideForRemove","showResultData","bind","showSavedData","addProperty","removeProperty","result","data","results","newObj","resultButtonDataArray","map","Object","assign","savedButtonDataArray","saved","resultToBeAdded","newCard","filter","concat","newSavedData","textAlign","Row","onMouseEnter","onMouseLeave","onClick","Container","Col","xs","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ddce868d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Card extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        console.log('lbel: '+this.props.id);\r\n        this.state = {\r\n            show : false,\r\n            label : this.props.showLabel\r\n        }\r\n        \r\n    }\r\n    onMouseOverOnImge(e){\r\n        this.setState({\r\n            show : true\r\n        })\r\n    }\r\n    onMouseOutOnImge(){\r\n        this.setState({\r\n            show : false\r\n        })\r\n    }\r\n    render(){\r\n        \r\n        var color = {\r\n            \r\n            backgroundColor: this.props.item.agency.brandingColors.primary\r\n        }\r\n        var styleWidth = this.props.width;\r\n        return(\r\n            <div className=\"container\">\r\n                <header style={{\"backgroundColor\":this.props.item.agency.brandingColors.primary}}>\r\n                <img src ={this.props.item.agency.logo} alt=\"logo\" style={{width:\"absolute\",align:\"left\"}}/>\r\n            </header>\r\n            <div  id={this.props.key}>\r\n                <img src ={this.props.item.mainImage} alt=\"image\" id={this.props.key} style={{width:\"100%\"}}/>\r\n                \r\n             </div>           \r\n                \r\n            <footer style={{\"textAlign\":\"left\",paddingBottom:\"20px\", fontSize: \"16px\"}}>Price: {this.props.item.price}</footer>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default Card;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Card from './Card';\r\nimport data from '../results';\r\nimport App from '../App.css';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { configure } from 'enzyme';\r\nimport Adapter from 'enzyme-adapter-react-16';\r\n\r\nconfigure({ adapter: new Adapter() });\r\n\r\n\r\n\r\n\r\nclass ResultsTable extends React.Component{\r\n    \r\n    constructor(){\r\n        super();\r\n        var resultButtonData = [];\r\n        var savedButtonData = [];\r\n        this.state = {\r\n            resultsData : [],\r\n            savedData : [],\r\n            isMouseInside : false,\r\n            isMouseInsideForRemove : false,\r\n           \r\n        }\r\n        this.showResultData = this.showResultData.bind(this);\r\n        this.showSavedData = this.showSavedData.bind(this);\r\n        this.addProperty = this.addProperty.bind(this);\r\n        this.removeProperty = this.removeProperty.bind(this);\r\n       // this.mouseEnter = this.mouseEnter.bind(this);\r\n       // this.mouseLeave = this.mouseLeave.bind(this);\r\n      //  this.mouseEnterForRemove = this.mouseEnterForRemove.bind(this);\r\n        //this.mouseLeaveForRemove= this.mouseLeaveForRemove.bind(this);\r\n    }\r\ncomponentDidMount(){\r\n    const result = data.results;\r\n    var newObj = {\"show\":false};\r\n    const resultButtonDataArray = result.map(result =>  Object.assign({},result,newObj));\r\n    const savedResult = data.saved;\r\n    const savedButtonDataArray = savedResult.map(result =>  Object.assign({},result,newObj));\r\n    this.setState({\r\n        resultsData : resultButtonDataArray,\r\n        savedData: savedButtonDataArray,\r\n        \r\n    })\r\n}\r\naddProperty(id,resultToBeAdded){\r\n    var results = this.state.resultsData;\r\n    resultToBeAdded.show = false;\r\n    var newObj = Object.assign({},resultToBeAdded);\r\n    /*for(var i =0;i<this.state.resultsData.length;i++){\r\n        \r\n            this.state.resultsData[i].show = false;\r\n            \r\n        \r\n    }\r\n    for(var i =0;i<this.state.savedData.length;i++){\r\n        \r\n            this.state.savedData[i].show = false;\r\n            \r\n        \r\n    }*/\r\n    var newCard = this.state.savedData.filter(result => result.id !== id).concat(newObj);\r\n    this.setState(prevState => {\r\n        return {\r\n            ...prevState,\r\n            savedData : newCard\r\n        }\r\n        \r\n    })\r\n}\r\nremoveProperty(id){\r\n    var newSavedData = this.state.savedData.filter(result => result.id !== id);\r\n    \r\n    this.setState(prevState => {\r\n        return {\r\n            ...prevState,\r\n            savedData : newSavedData\r\n        }\r\n        \r\n    })\r\n}\r\nshowResultData(){\r\n    \r\n    return (\r\n        <div className=\"App-header1\">\r\n                    <h3 style={{textAlign:\"center\"}}>Results</h3>\r\n                    {this.state.resultsData.map(result => {\r\n            return (\r\n                \r\n                <div className=\"container\" key={result.id}>\r\n                <Row  onMouseEnter={this.mouseEnter.bind(this, result.id)} onMouseLeave={this.mouseLeave.bind(this,result.id)} >\r\n                    \r\n                    <Card item={result} showLabel=\"add\"  width=\"100%\" />\r\n                \r\n                {result.show ? <button className=\"btn\" onClick={() => this.addProperty(result.id,result)}>add</button> : null}\r\n                    \r\n                    \r\n                </Row>\r\n                </div>\r\n                \r\n                \r\n            )\r\n            \r\n        })\r\n\r\n                    }\r\n        \r\n        </div>\r\n    )\r\n    \r\n        \r\n}\r\nshowSavedData(){\r\n    \r\n    return (\r\n        <div className=\"App-header1\">\r\n                    <h3 style={{textAlign:\"center\"}}>Saved Properties</h3>\r\n        {\r\n            this.state.savedData.map(result => {\r\n                return (\r\n                    \r\n                    <div className=\"container\" key={result.id}>\r\n                    <Row onMouseEnter={this.mouseEnterForRemove.bind(this,result.id)} onMouseLeave={this.mouseLeaveForRemove.bind(this,result.id)}>\r\n                        \r\n                        <Card item={result} showLabel=\"remove\" width=\"100%\" id={result.id}/>\r\n                        {result.show ? <button className=\"btn\" onClick={() => this.removeProperty(result.id)}>remove</button> : null}\r\n                       \r\n                        \r\n                    \r\n                    </Row>\r\n                    </div>\r\n                    \r\n                    \r\n                ) \r\n                \r\n            })\r\n        }            \r\n        \r\n        </div>\r\n    )\r\n    \r\n        \r\n}\r\nmouseEnter = (id) => {\r\n    //console.log('in result data');\r\n    \r\n    var existingResultData =  this.state.resultsData;\r\n    var arr = [];\r\n    \r\n    for(var i =0;i<existingResultData.length;i++){\r\n        \r\n        if(existingResultData[i].id === id){\r\n            \r\n            existingResultData[i].show = true;\r\n            arr.push(existingResultData[i]);\r\n            \r\n        }else{\r\n            existingResultData[i].show = false;\r\n            arr.push(existingResultData[i]);\r\n        }\r\n    }\r\n    this.setState(prevState => {\r\n        return{\r\n             ...prevState,\r\n             resultsData : arr\r\n        }\r\n     })\r\n    //this.setState({ resultsData: this.state.resultsData });\r\n   // this.setState({ isMouseInside: true });\r\n  }\r\n  mouseLeave = (id) => {\r\n      var existingResultData =  this.state.resultsData;\r\n        var arr = [];\r\n    for(var i =0;i<existingResultData.length;i++){\r\n        \r\n        if(existingResultData[i].id === id){\r\n            \r\n            existingResultData[i].show = false;\r\n            \r\n        }\r\n        arr.push(existingResultData[i]);\r\n    }\r\n    \r\n    this.setState(prevState =>{\r\n        return{\r\n             ...prevState,\r\n             resultsData : arr\r\n        }\r\n     })\r\n   // this.setState({ resultsData: this.state.resultsData });\r\n   // this.setState({ isMouseInside: false });\r\n  }\r\n  mouseEnterForRemove = (id) => {\r\n      console.log('in saved data');\r\n      var existingSavedData =  this.state.savedData;\r\n        var arr = [];\r\n    for(var i =0;i<existingSavedData.length;i++){\r\n        //console.log(\"id is: \"+e+\"  id: \"+this.state.resultsData[i].id);\r\n        if(existingSavedData[i].id === id){\r\n            \r\n            existingSavedData[i].show = true;\r\n            arr.push(existingSavedData[i]);\r\n            \r\n        }else{\r\n            existingSavedData[i].show = false;\r\n            arr.push(existingSavedData[i]);\r\n        }\r\n    }\r\n    this.setState(prevState =>{\r\n        return{\r\n             ...prevState,\r\n             savedData : arr\r\n        }\r\n     })\r\n  //  this.setState({ savedData: this.state.savedData });\r\n   // this.setState({ isMouseInsideForRemove: true });\r\n  }\r\n  mouseLeaveForRemove = (id) => {\r\n      var existingSavedData =  this.state.savedData;\r\n        var arr = [];\r\n    for(var i =0;i<existingSavedData.length;i++){\r\n        \r\n        if(existingSavedData[i].id === id){\r\n            \r\n            existingSavedData[i].show = false;\r\n            \r\n        }\r\n        arr.push(existingSavedData[i]);\r\n    }\r\n    this.setState(prevState => {\r\n        return{\r\n             ...prevState,\r\n             savedData : arr\r\n        }\r\n     })\r\n   // this.setState({ savedData: this.state.savedData });\r\n   // this.setState({ isMouseInsideForRemove: false });\r\n  }\r\n    render(){\r\n\r\n        var style = {\r\n            \"width\":\"50%\",\r\n            \"float\":\"left\"\r\n        }\r\n        var style1 = {\r\n            \"width\":\"50%\",\r\n            \"float\":\"right\"\r\n        }\r\n            \r\n        return(\r\n            <Container>\r\n                <Row>\r\n                    <Col xs=\"6\">\r\n                    {this.showResultData()}\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                    {this.showSavedData()}\r\n                    </Col>\r\n                </Row>\r\n                \r\n                \r\n            </Container>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default ResultsTable;","import React, {useState,useEffect} from 'react';\r\nimport './App.css';\r\nimport ResultsTable from './component/ResultsTable';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n          \r\n        <ResultsTable/>\r\n        </div>\r\n      );\r\n}\r\nexport default App;     ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}